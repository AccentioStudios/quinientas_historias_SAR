version: '3'
services:
  # ///////////////////////////  Others  ///////////////////////////
  500h-sar-mariaDB:
    container_name: ${MYSQL_HOST}
    image: mariadb
    restart: always
    environment:
      MYSQL_TCP_PORT: ${MYSQL_PORT}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - 500h-mariadb-data:/var/lib/mysql/data
    ports:
      - '${MYSQL_PORT}:${MYSQL_PORT}'
    networks:
      - 500Historias_SAR
  500h-sar-rabbitmq:
    image: rabbitmq:3.9-management
    hostname: 500h-sar-rabbitmq
    restart: always
    container_name: ${RABBITMQ_HOST}
    ports:
      - 5672:5672
      - 15672:15672
    env_file:
      - .env
    environment:
      - RABBITMQ_DEFAULT_USER = ${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS = ${RABBITMQ_DEFAULT_PASS}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/
      - rabbitmq_log:/var/log/rabbitmq/
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:15672']
      interval: 5s
      timeout: 10s
      retries: 5
    networks:
      - 500Historias_SAR
  500h-sar-redis:
    container_name: ${REDIS_HOST}
    restart: always
    image: redis:latest
    command: >
      --requirepass ${REDIS_PASSWORD} --port ${REDIS_PORT}
    ports:
      - '${REDIS_PORT}:${REDIS_PORT}'
    env_file:
      - .env
    volumes:
      - ./redis/data:/data
    networks:
      - 500Historias_SAR

  # ///////////////////////////  APIs  ///////////////////////////
  500h-sar-api:
    container_name: 500h-sar-api
    restart: always
    build:
      context: .
      dockerfile: ./src/api/Dockerfile
      target: development
    command: npm run start:dev api
    env_file:
      - .env
    depends_on:
      - 500h-sar-rabbitmq
      - 500h-sar-mariaDB
      - 500h-sar-auth
      - 500h-sar-challenges
    volumes:
      - .:/usr/src/app # any change to base folder should be reflected
      - /usr/src/app/node_modules
    ports:
      - '${PORT}:${PORT}'
    networks:
      - 500Historias_SAR
  500h-sar-auth:
    container_name: 500h-sar-auth
    restart: always
    build:
      context: .
      dockerfile: ./src/auth/Dockerfile
      target: development
    command: npm run start:dev auth # overrides CMD from dockerfile
    depends_on:
      - 500h-sar-rabbitmq
      - 500h-sar-mariaDB
    env_file:
      - .env
    volumes:
      - .:/usr/src/app # any change to base folder should be reflected
      - /usr/src/app/node_modules
    networks:
      - 500Historias_SAR
  500h-sar-challenges:
    container_name: 500h-sar-challenges
    restart: always
    build:
      context: .
      dockerfile: ./src/challenges/Dockerfile
      target: development
    command: npm run start:dev challenges # overrides CMD from dockerfile
    env_file:
      - .env
    depends_on:
      - 500h-sar-rabbitmq
      - 500h-sar-mariaDB
    volumes:
      - .:/usr/src/app # any change to base folder should be reflected
      - /usr/src/app/node_modules
    networks:
      - 500Historias_SAR
volumes:
  redis:
    driver: local
  rabbitmq_data:
  rabbitmq_log:
  500h-mariadb-data:
    driver: local
networks:
  500Historias_SAR:
    driver: bridge
